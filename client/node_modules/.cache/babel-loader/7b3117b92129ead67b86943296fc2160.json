{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Documents/candidatelist/v2/client/src/components/ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/candidateActions';\n\nclass Sidebar extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const items = this.props.item.items;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, items.map(({\n      _id,\n      name\n    }) => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: this.onDeleteClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"\\xD7\"), name))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(Sidebar);","map":{"version":3,"sources":["/home/alexander/Documents/candidatelist/v2/client/src/components/ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","connect","getItems","Sidebar","componentDidMount","props","render","items","item","map","_id","name","onDeleteClick","bind","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,MAA7C,QAA0D,YAA1D;AACA,SAAQC,aAAR,EAAuBC,eAAvB,QAA6C,wBAA7C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,6BAAvB;;AAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAE5BU,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWH,QAAX;AACH;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKF,KAAL,CAAWG,IADxB,CACGD,KADH;AAEL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSA,KAAK,CAACE,GAAN,CAAU,CAAC;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,KAAD,KACP,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8BH,GAA9B,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOKC,IAPL,CADH,CADT,CADJ,CADJ;AAiBH;;AAzB2B;;AA4BhC,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,IAAI,EAAEO,KAAK,CAACP;AADoB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACa,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAAsCC,OAAtC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport {connect} from 'react-redux';\nimport {getItems} from '../actions/candidateActions';\n\nclass Sidebar extends Component {\n\n    componentDidMount(){\n        this.props.getItems();\n    }\n\n    render() {\n        const { items } = this.props.item;\n        return (\n            <Container>\n                <ListGroup>\n                        {items.map(({_id, name})=>(\n                            <ListGroupItem>\n                                <Button \n                                    className=\"remove-btn\" \n                                    color=\"danger\" \n                                    size=\"sm\" \n                                    onClick={this.onDeleteClick.bind(this, _id)}>\n                                    &times;</Button>\n                                {name}\n                            </ListGroupItem>\n                        ))}\n                </ListGroup>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    item: state.item\n})\n\nexport default connect(mapStateToProps, {getItems })(Sidebar);"]},"metadata":{},"sourceType":"module"}