{"ast":null,"code":"import _objectSpread from \"/home/alexander/Documents/candidatelist/v2/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/alexander/Documents/candidatelist/v2/client/src/components/CandidatePanel.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport styles from './css/CandidatePanel.module.css';\nimport moment from 'moment';\nimport CandidatePanelCircle from './CandidatePanelCircle';\nimport CandidatePositionCard from './CandidatePositionCard';\nimport { Link } from 'react-router-dom';\n\nclass CandidatePanel extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getRandomIntInclusive = (min, max) => {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n  }\n\n  render() {\n    const candidate = this.props.candidates.candidates ? this.props.candidates.candidates.filter(item => item._id === this.props.candidates.selectedCandidateId)[0] : null;\n    if (!candidate) return null;\n    const sorted = this.props.candidates.candidates.sort((a, b) => a.polling > b.polling ? -1 : 1);\n    const rank = sorted.indexOf(candidate) + 1;\n    const name = candidate.name,\n          state = candidate.state,\n          dob = candidate.dob,\n          slogan = candidate.slogan,\n          status = candidate.status,\n          polling = candidate.polling,\n          description = candidate.description,\n          image = candidate.image,\n          website = candidate.website,\n          websiteDisplay = candidate.websiteDisplay,\n          partyAffiliation = candidate.partyAffiliation;\n    const age = moment().diff(dob, 'years');\n\n    const getButtonStyle = () => {\n      return {\n        backgroundColor: \"hsla(\".concat(this.getRandomIntInclusive(0, 360), \",42%,22%,1.0)\")\n      };\n    };\n\n    const circleBg = _objectSpread({}, getButtonStyle(), {\n      minWidth: '90px'\n    });\n\n    return React.createElement(\"div\", {\n      className: styles.candidatePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CandidatePanelCircle, {\n      style: circleBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"circle_polling\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, Math.floor(polling), \"%\"), React.createElement(\"span\", {\n      className: \"circle_rank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"#\", rank)), React.createElement(\"div\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"panel-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, name), React.createElement(\"h3\", {\n      className: \"panel-slogan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, slogan))), React.createElement(\"div\", {\n      className: \"panel-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: getButtonStyle(),\n      className: \"panel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"panel-websiteLink\",\n      href: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, websiteDisplay)), React.createElement(\"div\", {\n      style: getButtonStyle(),\n      className: \"panel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Age: \", age), React.createElement(\"div\", {\n      style: getButtonStyle(),\n      className: \"panel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, partyAffiliation), React.createElement(\"div\", {\n      style: getButtonStyle(),\n      className: \"panel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, state), React.createElement(\"div\", {\n      style: getButtonStyle(),\n      className: \"panel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(this.props.match.url, \"/edit\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Edit\"))), React.createElement(\"div\", {\n      className: \"panel-row panel-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Positions\"), candidate.positions.map(position => {\n      return React.createElement(CandidatePositionCard, {\n        key: position._id,\n        position: position,\n        issues: this.props.issues.issues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"panel-column panel-about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"About\"), React.createElement(\"p\", {\n      className: \"candidateDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, description))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  candidates: state.candidates,\n  issues: state.issues\n});\n\nexport default connect(mapStateToProps, {})(CandidatePanel);","map":{"version":3,"sources":["/home/alexander/Documents/candidatelist/v2/client/src/components/CandidatePanel.js"],"names":["connect","React","Component","styles","moment","CandidatePanelCircle","CandidatePositionCard","Link","CandidatePanel","getRandomIntInclusive","min","max","Math","ceil","floor","random","render","candidate","props","candidates","filter","item","_id","selectedCandidateId","sorted","sort","a","b","polling","rank","indexOf","name","state","dob","slogan","status","description","image","website","websiteDisplay","partyAffiliation","age","diff","getButtonStyle","backgroundColor","circleBg","minWidth","candidatePanel","match","url","positions","map","position","issues","mapStateToProps"],"mappings":"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","sourcesContent":["import {connect} from 'react-redux';\nimport React, { Component } from 'react'\nimport styles from './css/CandidatePanel.module.css';\nimport moment from 'moment';\nimport CandidatePanelCircle from './CandidatePanelCircle';\nimport CandidatePositionCard from './CandidatePositionCard';\nimport {Link} from 'react-router-dom';\n\nclass CandidatePanel extends Component {\n\n    getRandomIntInclusive = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min; \n      }\n\n    render() {\n\n        const candidate = this.props.candidates.candidates ?this.props.candidates.candidates.filter((item)=>item._id === this.props.candidates.selectedCandidateId)[0]:null;\n\n        if(!candidate) return null;\n\n        const sorted = this.props.candidates.candidates.sort((a,b)=>(a.polling>b.polling)?-1:1);\n\n        const rank = sorted.indexOf(candidate) + 1;\n\n        const {name, state, dob, slogan, status, polling, description, image, website, websiteDisplay, partyAffiliation} = candidate;\n    \n        const age = moment().diff(dob, 'years');\n\n        const getButtonStyle = () => {\n            return {\n                backgroundColor: `hsla(${this.getRandomIntInclusive(0,360)},42%,22%,1.0)`\n            }\n        }\n\n        const circleBg = {\n            ...getButtonStyle(),\n            minWidth: '90px',\n        };\n        \n        return (\n            <div className={styles.candidatePanel}>\n                <div className=\"panel-row\">\n                    <CandidatePanelCircle style={circleBg}>\n                        <span className=\"circle_polling\">{Math.floor(polling)}%</span>\n                        <span className=\"circle_rank\">#{rank}</span>\n                    </CandidatePanelCircle>\n                    <div className=\"panel-title\">\n                        <h1 className=\"panel-name\">{name}</h1>\n                        <h3 className=\"panel-slogan\">{slogan}</h3>\n                    </div>\n                </div>\n                <div className=\"panel-row\">\n                    <div style={getButtonStyle()} className=\"panel-button\">\n                        <a className=\"panel-websiteLink\" href={website}>{websiteDisplay}</a>\n                    </div>\n                    <div style={getButtonStyle()} className=\"panel-button\">\n                        Age: {age}\n                    </div>\n                    <div style={getButtonStyle()} className=\"panel-button\">\n                        {partyAffiliation}\n                    </div>\n                    <div style={getButtonStyle()} className=\"panel-button\">\n                        {state}\n                    </div>\n                    <div style={getButtonStyle()} className=\"panel-button\">\n                        <Link to={`${this.props.match.url}/edit`}>Edit</Link>\n                    </div>\n                </div>\n                <div className=\"panel-row panel-content\">\n                    <div className=\"panel-column\">\n                        <h2 className=\"panel-heading\">Positions</h2>\n                        {candidate.positions.map(position=>{\n                            return (<CandidatePositionCard key={position._id} position={position} issues={this.props.issues.issues}/>)\n                        })}\n                    </div>\n                    <div className=\"panel-column panel-about\">\n                        <h2 className=\"panel-heading\">About</h2>\n                        <p className=\"candidateDescription\">{description}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    candidates: state.candidates,\n    issues: state.issues,\n})\n\nexport default connect(mapStateToProps, {})(CandidatePanel);"]},"metadata":{},"sourceType":"module"}